import telebot #—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É pyTelegramBotAPI –∏ –∏–º–æ—Ä—Ç–∏—Ä—É–µ–º
import os #–¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
import  KeyBoarding_in_ru as navv #–∏–º–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª python, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≥—Ä—è–∑–Ω—è—Ç—å –∫–æ–¥
from ru_list_langs import LANGUAGES #–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª –ø–∏—Ç–æ–Ω, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤
import requests
import subprocess #–¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∞—É–¥–∏–æ ogg –≤ wav
import speech_recognition as sr #—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
from gtts import gTTS #–æ–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞
token = '-' #–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –±–ª–∞–≥–æ–¥—è—Ä –Ω–µ–º—É, —Ç–æ–∫–µ–Ω—É
KeyAPI = '-' #–∫–ª—é—á API –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞
folder_id = '-' #–∏–¥ –ø–∞–ø–∫–∏ —Å –ø—Ä–æ–µ–∫—Ç–æ–º –≤ —è–Ω–¥–µ–∫—Å –∫–ª–∞—É–¥
bot = telebot.TeleBot(token) #–æ–±—ä—è–≤–ª—è—é –∫–ª–∞—Å—Å
#------------------------–°—Ç–∞—Ä—Ç----------------------
@bot.message_handler(commands=['start']) #–æ–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
def start(message):
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫!\n'
                                    '\n'
                                    '–ß—Ç–æ –º–æ–∂–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?\n'
                                      '\n'
                                      'üà≥ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —è–∑—ã–∫\n'
                                      '\n'
                                      'üì≥ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ì–° –≤ —Ç–µ–∫—Å—Ç\n'
                                      '\n'
                                      '‚öõ –û–∑–≤—É—á–∏–≤–∞—Ç—å –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è\n'
                                      '\n'
                                      '*–ê –≥–ª–∞–≤–Ω–æ–µ - –∫—Ä–∞–π–Ω–µ –±—ã—Å—Ç—Ä –∏ —É–¥–æ–±–µ–Ω –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.*\n'
                                      '\n'
                                      '\n'
                                    '–ï—Å–ª–∏ –≤—ã —á—Ç–æ-–ª–∏–±–æ –Ω–µ –ø–æ–Ω—è–ª–∏, —Ç–æ –ø—Ä–æ—Å—Ç–æ –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É *"–ü–æ–º–æ—â—å"*.',
                     reply_markup=navv.keyboard2, parse_mode="Markdown") #–≤ reply_markup –º—ã –ø–µ—Ä–µ–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–∑ navv,
    																	 #–≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–Ω–æ–ø–∫–∏, —Ç–æ –µ—Å—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
#--------------–°–ø–∏—Å–æ–∫-------------------------------
@bot.message_handler(commands=['list']) #–æ–±—ä—è–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –ª–∏—Å—Ç
def list_lan(message):
    LANGUAGES_TEXT = "*LANGUAGES*\n" #–∑–∞–≥–∞–ª–æ–≤–æ–∫
    count = [] #—Å–æ–∑–¥–∞—é –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Å—á—ë—Ç–∞ –∫–æ–ª-–≤–∞ —è–∑—ã–∫–æ–≤
    for language in LANGUAGES: #–∏–¥—É —Ü–∏–∫–ª–æ–º –ø–æ –∫–ª—é—á–∞–º –≤ —Å–ª–æ–≤–∞—Ä–µ (—Å–ø–∏—Å–æ–∫ —è—â—ã–∫–æ–≤ –≤ —Ñ–∞–π–ª–µ while2, –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è LANGUAGES)
        count.append(language) #–î–æ–±–∞–≤–ª—è—é –∫–ª—é—á–∏ (ru, en, de...) –≤ —Å–ø–∏—Å–æ–∫
        #–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –¥–æ–±–∞–≤–ª—è—é —Å—Ç—Ä–æ–∫–∏. –†–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫: –æ–±—Ä–∞—â–∞—é—Å—å –∫ —Å–ª–≤–æ–∞—Ä—é –ø–æ –∏–Ω–¥–µ–∫—Å—É –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –≤ —Ü–∏–∫–ª–µ –∫–ª—é—á–∞ {LANGUAGES[language]
        #–∏ –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–ª—è—é —Å–∞–º –∫–ª—é—á {language}. –ù–∞ –≤—ã—Ö–æ–¥–µ —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ: –ê–Ω–≥–ª–∏–π—Å–∫–∏–π --> en  –∏–ª–∏ –±–æ–ª–µ–µ —è–≤–Ω—ã–π –ø—Ä–∏–º–µ—Ä
        #{LANGUAGES[en or ru].capitalize()}_ --> {en or ru}
        LANGUAGES_TEXT += f"_\n{LANGUAGES[language].capitalize()}_ --> {language}"
    bot.send_message(message.chat.id, text=f'{LANGUAGES_TEXT}\n' #–ø–µ—Ä–µ–¥–∞—é –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≥–æ—Ç–æ–≤—ã–º —Å–ø–∏—Å–∫–æ–º
                                           f'\n'
                                           f'*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–∑—ã–∫–æ–≤*: {len(count)}', parse_mode="Markdown") #parse_mode="Markdown" –¥–ª—è —à—Ä–∏—Ñ—Ç–∞
    													#*–∞–≤–∞–≤* - –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç, –∞  _–∞–ø–≤–≤_ - –∫—É—Ä—Å–∏–≤
#------------------–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏--------------------
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, text="*-->–ö–û–ú–ê–ù–î–´<--*\n"
                                           "\n"
                                           "/languages -> –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤.\n"
                                                  "/choose -> –í—ã–±–æ—Ä —è–∑—ã–∫–∞.\n"
                                                  '/start -> –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ "—Å—Ç–∞—Ä—Ç".\n'
                                                  '/help -> –ü–æ–ª—É—á–∏—Ç—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n'
                                                  '\n'
                                                  '_–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á—ë–Ω –ø–µ—Ä–µ–≤–æ–¥ —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π_', parse_mode="Markdown")
#---------------------------–í—ã–±–æ—Ä —è–∑—ã–∫–∞-–§—É–Ω–¥–∞–º–µ–Ω—Ç-–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞----------------------------------------------
@bot.message_handler(commands=['choose']) #–æ–±—ä—è–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –≤—ã–±–æ—Ä–∞, —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –∑–¥–µ—Å—å
def choose_lang(message, nn, mm):
    global flatten #–±—ä—è–≤–ª—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –∫–ª—é—á–∞–º–∏ —è–∑—ã–∫–æ–≤
    global flatten1 #–±—ä—è–≤–ª—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —è–∑—ã–∫–æ–≤
    global jjj #–æ–±—ä—è–≤–ª—è—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–ª-–≤–∞ —è–∑—ã–∫–æ–≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π(–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—é–¥—É –≤ –Ω–∞—à–µ–º –∫–æ–¥–µ)
    d = LANGUAGES #–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π d –ø—Ä–∏—Å–≤–∞–∏–≤–∞—é –ø–µ—Ä–º–µ–Ω–Ω—É—é —Å–ª–æ–≤–∞—Ä—è LANGUAGES
    button_demo = [] #—Å–æ–∑–¥–∞—é —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    b = [] #—Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–ª—é—á–µ–π
    bb = [] #—Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π
    for k, v in d.items():#—á–µ—Ä–µ–∑ —Ü–∏–∫–ª –ø–æ—É–ª—á–∞—é –∫–ª—é—á(k) –∏ –∑–Ω–∞—á–µ–Ω–∏–µ v, –ø—Ä–æ—Ö–æ–¥—è—Å—å –ø–æ —Å–ª–æ–≤–∞—Ä—é
        a = k
        b.append(a)
        s = v
        bb.append(s)
    flatten = [str(sub) for sub in b] #–ø—Ä–æ—Ö–æ–∂—É—Å—å –ø–æ —Å–ø–∏—Å–∫—É –∏–∑ –∫–ª—é—á–µ–π –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –∏—Ö –≤ —Å—Ç—Ä–æ–∫—É(–∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç)
    flatten1 = [str(sub) for sub in bb]#—Ç–æ –∂–µ —Å–∞–º–æ–µ, –Ω–æ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ (–∑–Ω–∞—á–µ–Ω–∏–µ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞)
    jjj = len(flatten) #–¥–µ–ª–∞—é –ø–æ–¥—Å—á—ë—Ç –∫–æ–ª-–≤–∞ —è–∑—ã–∫–æ–≤
    i = nn #—ç—Ç–æ –∏ next - –∏–Ω–¥–µ–∫—Å—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –±—É–¥–µ–∏ –æ–ø–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ —Ü–∏–∫–ª–µ
    ii = mm
    for ix in range(int(jjj/2)): #–¥–µ–ª—é –∫–æ–ª-–≤–æ –Ω–∞ –¥–≤–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É—è –≤ —á–∏—Å–ª–æ
    	#–≤ —Å–ø–∏—Å–æ–∫ butto –ø–æ–º–µ—â–∞—é –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏. 
    	#text=f"{flatten1[i]}".capitalize() - –±–µ—Ä—É –∑–Ω–∞—á–µ–Ω–∏—è(–Ω–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞) –ø–æ –∏–Ω–¥–µ–∫—Å—É
    	#callback_data=f'{flatten[i]}' - –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∞–µ—Ç –∫–ª—é—á —è–∑—ã–∫–∞
    	#—Ç–æ –µ—Å—Ç—å –Ω–∞–∂–∞–≤ –Ω–∞ –†—É—Å—Å–∫–∏–π, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∞–µ—Ç ru. –ò–Ω–¥–µ–∫—Å –Ω–∞–∑–≤–∞–Ω–∏—è —è–∑—ã–∫–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º –∫–ª—é—á–∞
        butto = [
        telebot.types.InlineKeyboardButton(text=f"{flatten1[i]}".capitalize(), callback_data=f'{flatten[i]}'),
        telebot.types.InlineKeyboardButton(text=f"{flatten1[ii]}".capitalize(), callback_data=f'{flatten[ii]}')
            ]
        i += 2 #–∫–∞–∂–¥—ã–π —Ä–∞–∑ —É–≤–µ–ª–∏—á–∏–≤–∞—é –∏–Ω–¥–µ–∫ –Ω–∞ 2.
        ii += 2
        button_demo.append(butto)#–ø–æ–º–µ—â–∞—é –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞—à–∏ –∫–Ω–æ–ø–∫–∏(2 –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º —Å–ø—Å–∏–∫–µ, –∞ –∑–Ω–∞—á–∏—Ç button_demo - –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫) –∫–∞–∂–¥—ã–π —Ä–∞–∑
        #–¥–∞–ª–µ–µ —É—Å–ª–æ–≤–∏–µ. –ï—Å–ª–∏ –∫–æ–ª-–≤–æ —Å–ø–∏—Å–æ–∫–≤(–≤ –æ–¥–Ω–æ–º 2 –∫–Ω–æ–ø–∫–∏) –≤ —Å–ø–∏—Å–∫–µ —Ä–æ–≤–Ω—è–µ—Ç—Å—è 8, —Ç–æ...
        #—è —Å–æ–∑–¥–∞—é —Å–ø–∏—Å–æ–∫ b, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–º –∂–µ –º–µ—Ç–æ–¥–æ–º –ø–æ–º–µ—â–∞—é —É–∂–µ —á–∏–∏—Å–ª–∞
        #—ç—Ç–æ –ø–µ—Ä–º–µ—â–µ–Ω–∏–µ –ø–æ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–æ–≤. –∫–Ω–æ–ø–∫–∞ 1 - –ø–µ—Ä–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–æ–≤, –∞ 2 - –≤—Ç–æ—Ä–π–æ —Å–ø–∏—Å–æ–∫ –≤—ã–±–æ—Ä–∞. –í—Å–µ–≥–æ –∏—Ö 6.
        if len(button_demo) == 8:
            b = [telebot.types.InlineKeyboardButton(text=f"1", callback_data=f'1'),
                 telebot.types.InlineKeyboardButton(text=f"2", callback_data=f'2'),
                 telebot.types.InlineKeyboardButton(text=f"3", callback_data=f'3'),
                 telebot.types.InlineKeyboardButton(text=f"4", callback_data=f'4'),
                 telebot.types.InlineKeyboardButton(text=f"5", callback_data=f'5'),
                 telebot.types.InlineKeyboardButton(text=f"6", callback_data=f'6')]
            button_demo.append(b)
            break #–∑–∞–≤–µ—Ä—à–∞—é —Ü–∏–∫–ª —á–µ—Ä–µ–∑ break –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    #–≤ –º–∞—Ä–∫–∞–ø —è –ø–æ–º–µ—â–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –≤ –∫–æ—Ç–æ—Ä—É—é –ø–æ–º–µ—â–∞—é –Ω–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑ –∫–Ω–æ–ø–æ–∫ —è–∑—ã–∫–∞ –∏ —á–∏—Å–µ–ª –ø–æ –≤—ã–±–æ—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü(–ª—É—á—à–µ –Ω–∞–∑–≤–∞—Ç—å —ç—Ç–æ–∫ –∞–∫ —Å—Ç–∞—Ä–Ω—Ü–∏–∞, –¥–∞)
    markup = telebot.types.InlineKeyboardMarkup(button_demo) 
    #–±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≥–¥–µ –≤—ã—Ö–æ–¥–∏—Ç —É–∂–µ –Ω–∞—à –º–∞—Ä–∫–∞–ø, —Ç–æ –µ—Å—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –º–µ–Ω—é –ø–æ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:', reply_markup=markup)
#-------------------------------–®–µ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞--------------------------------------------------------
def choose_lang6(message, nn, mm):
    i = nn
    ii = mm
    button_demo = []
    for ix in range(int(jjj/2)):
        butto = [
        telebot.types.InlineKeyboardButton(text=f"{flatten1[i]}".capitalize(), callback_data=f'{flatten[i]}'),
        telebot.types.InlineKeyboardButton(text=f"{flatten1[ii]}".capitalize(), callback_data=f'{flatten[ii]}')
            ]
        i += 2
        ii += 2
        button_demo.append(butto)
        if len(button_demo) == 4:
            b = [telebot.types.InlineKeyboardButton(text=f"1", callback_data=f'1'),
                 telebot.types.InlineKeyboardButton(text=f"2", callback_data=f'2'),
                 telebot.types.InlineKeyboardButton(text=f"3", callback_data=f'3'),
                 telebot.types.InlineKeyboardButton(text=f"4", callback_data=f'4'),
                 telebot.types.InlineKeyboardButton(text=f"5", callback_data=f'5'),
                 telebot.types.InlineKeyboardButton(text=f"6", callback_data=f'6')]
            button_demo.append(b)
            break
    markup = telebot.types.InlineKeyboardMarkup(button_demo)
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:', reply_markup=markup)
#-------------------------------–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ —Å –∫–Ω–æ–ø–æ–∫ –ò–Ω–ª–∞–π–Ω(–≤—ã–±–æ—Ä —è–∑—ã–∫–∞)--------------------------------------------------------
#query_handler —Å–æ–≤–µ—Ä—à–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    global q #–≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–º–µ–Ω–Ω–∞—è —Å –∫–ª—é—á–æ–º —è–∑—ã–∫–∞
    global qq #–≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–Ω–Ω–∞—è —Å –Ω–æ–º–µ—Ä–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    #–∑–¥–µ—Å—å –∏ –ø–æ—Å–ª–µ - –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ —É—Å–ª–æ–≤–∏–µ. –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç 1, 2, 3...
    #—Ç–æ –º—ã –≤ –ø–µ—Ä–µ–º–Ω–Ω—É—é qq –ø–æ–º–µ—â–∞–µ–º —ç—Ç–æ –∑–Ω–∞—á–µ–∏–µ –∏ —É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±9—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞,
    #—Ç–æ –µ—Å—Ç—å –≤—ã–±–æ—Ä —è—ã–∑–∫–∞ –∏ –¥–µ–ª–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç(–ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ) –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏—é, –∫–æ—Ç–æ—Ä–æ–π –º—ã –ø—Ä–µ—Ä–æ–≤–Ω—è–ª–∏ –Ω—É–º–µ—Ä–∞—Ü–∏—é
    #–ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º - –µ—Å–ª–∏ —Ç—ã –Ω–∞–∂–º—ë—à—å –Ω–∞ 1, —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ –∏ –ø–µ—Ä–µ–Ω–µ—Å—ë—Ç —Ç–µ–±—è –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é choose_lang2(call.message)
    #–∞ –µ—Å–ª–∏ –±—É–¥–µ—Ç 5, —Ç–æ choose_lang5(call.message)
    if call.data == '1':
        qq = call.data
        bot.delete_message(call.message.chat.id, call.message.message_id)
        choose_lang(call.message, 0, 1)
        return
    elif call.data == '2':
        qq = call.data
        bot.delete_message(call.message.chat.id, call.message.message_id)
        choose_lang(call.message, 16, 17)
        return
    elif call.data == '3':
        qq = call.data
        bot.delete_message(call.message.chat.id, call.message.message_id)
        choose_lang(call.message, 32, 33)
        return
    elif call.data == '4':
        qq = call.data
        bot.delete_message(call.message.chat.id, call.message.message_id)
        choose_lang(call.message, 48, 49)
        return
    elif call.data == '5':
        qq = call.data
        bot.delete_message(call.message.chat.id, call.message.message_id)
        choose_lang(call.message, 64, 65)
        return
    elif call.data == '6':
        qq = call.data
        bot.delete_message(call.message.chat.id, call.message.message_id)
        choose_lang6(call.message, 80, 81)
        return
    #–µ—Å–ª–∏ —Ç—ã –Ω–∞–∂–∞–ª –Ω–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ 1, 2, 3.., –∞ –Ω–∞ —è–∑—ã–∫, —Ç–æ –±–æ—Ç —Ç–∞–∫ –∂–µ —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ
    #–∏ –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–ª—é—á —è–∑—ã–∫–∞, —Ö—Ä–∞–Ω—è—â–∏–π—Å—è –≤ callback_data
    #–∏ –≤ –ø–µ—Ä–º–µ–Ω–Ω—É—é q –ø–µ—Ä–µ–¥–∞—ë—Ç —ç—Ç–æ—Ç –∫–ª—é—á
    else:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        bot.answer_callback_query(callback_query_id=call.id, text='‚ùó‚ùó‚ùó–Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω - ' + (call.data).capitalize() + '‚ùó‚ùó‚ùó')
        q = call.data
#-------------------------------–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π--------------------------------------------------------
# –≤ —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥—Å
@bot.message_handler(content_types=['voice'])
def repeat_all_message(message):
	#–µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≥—Å , —Ç–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é file_info –ø–æ–º–µ—â–∞–µ–º —Ç–æ, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –ø–æ–ª—É—á–∞—é —Å–∞–º —Ñ–∞–ª –¥–ª—è –±—É–¥—â–µ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
	#–∞ –≤ file –º—ã —á–µ—Ä–µ–∑ —Ä–µ–∫—É–∞—ç—Å—Ç, —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö get,
	#–Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è. –°–æ–∑–¥–∞—é —Ñ–∞–π–ª new_voice.ogg(288 —Å—Ç—Ä–æ–∫–∞) –∏ –æ—Ç–∫—Ä—ã–≤–∞—é –µ–≥–æ –Ω–∞ –∑–∞–ø–∏—Å—å, –∑–∞–ø–∏—Å—ã–≤–∞—è —Ç—É–¥–∞ file.content
  file_info = bot.get_file(message.voice.file_id)
  file = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token, file_info.file_path))
  with open('new_voice.ogg','wb') as f:
    f.write(file.content)
  src_filename = 'new_voice.ogg'#–ø–æ–º–µ—â–∞—é —Å–∫–∞—á–∞–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ogg –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
  dest_filename = 'output.wav' #–ø–æ–º–µ—â–∞—é –±—É–¥—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
  process = subprocess.run(['ffmpeg', '-i', src_filename, dest_filename]) #–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é —Ñ–∞–π–ª ogg –≤ wav
  if process.returncode != 0: #–µ—Å–ª–∏ –æ—à–∏–±–∫–∞, —Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –æ–± —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å—Å–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Ñ-–∏—é error_message()
      bot.send_message(message.chat.id, text="–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ.")
      error_message(message)
      return
  r = sr.Recognizer() #—Å–æ–∑–¥–∞—é –∫–ª–∞—Å—Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
  will_convert = sr.AudioFile('output.wav') #–ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é
  with will_convert as source: #–∏–¥—ë—Ç –ø–µ—Ä–µ–≤–æ–¥ –≥—Å –≤ —Ç–µ–∫—Å—Ç
      audio = r.record(source)
  try:#–ø—ã—Ç–∞—é—Å—Ç –∏–∑–±–µ–∂–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫. –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –º—ã –ø–æ–º–µ—â–∞–µ–º –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ, —É–∫–∞–∑—ã–≤–∞—è —è–∑—ã–∫
      converted_soundfile = r.recognize_google(audio, language='ru-RU')
  except:
      os.remove('output.wav')#–µ—Å–ª–∏ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞, —Ç–æ —É–¥–∞–ª—è–µ–º –≤—Å–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã
      os.remove('new_voice.ogg')
      error_message(message)#–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤–æ —Ñ-–∏—é —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
      return
  #–±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  bot.send_message(message.chat.id, text="*–û—Ä–∏–≥–∏–Ω–∞–ª.*\n"
                                         f"\n"
                                         f"{converted_soundfile}.", parse_mode="Markdown")
  os.remove('output.wav')
  os.remove('new_voice.ogg')#—É–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
  # –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏—Å—å –≤–æ —Ñ-–∏—é process_of_translation(),
  #–ø–µ—Ä–µ–¥–∞–≤–∞—è —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–æ —ç—Ç–æ–≥–æ —è–∑—ã–∫–∞, –Ω–æ –µ—Å–ª–∏ –Ω–µ –±—ã–ª –≤—ã–±—Ä–∞–Ω —è–∑—ã–∫, —Ç–æ —É–±–¥–µ—Ç –æ—à–∏–±–∫–∞,
  #–∏ –¥—è–ª –µ—ë —É—Å—Ç–∞—Ä–Ω–µ–Ω–∏—è –æ–±–æ—Ä–∞—á–∏–≤–∞—é –≤—Å—ë –≤ try, –¥–∞–≤–∞—è —è–∑—ã–∫ –∫–∞–∫ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
  try:
      process_of_translation(message, f'{converted_soundfile}', q)
  except:
      process_of_translation(message, f'{converted_soundfile}','en')

#-------------------------------–ü–µ—Ä–µ–≤–æ–¥ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ –∫–æ–º–∞–Ω–¥(–æ—Ç–≤–µ—Ç –Ω–∞ –≤—Å–µ —Å–ª–æ–≤–∞)--------------------------------------------------------
def process_of_translation(message, text, q):
    target = q #–ø—Ä–∏—Å–≤–∞–∏–≤–∞—é –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —è–∑—ã–∫
    #–∏–¥—ë—Ç —Ä–∞–±–æ—Ç–∞ —Å api yandex. –≤ —Å–ª–æ–≤–∞—Ä—å –±–æ–¥–∏ –ø–æ–º–µ—â–∞—é —Ç–µ–∫—Å—Ç, —è—ã–∑–∫ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏ –∞–π–¥–∏ –ø–∞–ø–∫–∏ —Å –ø—Ä–æ–µ–∫—Ç–æ–º
    #–Ω–∞ —è–Ω–¥–µ–∫—Å –∫–ª–∞—É–¥
    body = {
        "targetLanguageCode": target,
        "texts": text,
        "folderId": folder_id,
    }
    #–ø–µ—Ä–∞–¥—é –∞–ø–∏ –∫–ª—é—á
    headers = {
        "Content-Type": "application/json",
        "Authorization": "Bearer {0}".format(KeyAPI)
    }
    #—Ç—É—Ç –º—ã —á–µ—Ä–µ–∑ —Ä–µ–∫—É–∞—ç—Å—Ç, –º–µ—Ç–æ–¥–æ–º –ø–æ—Å—Ç, –æ—Ç–ø—Ä–∞–ª—è–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ—É–ª—á–µ–º –Ω–∞–∑–∞–¥
    response = requests.post('https://translate.api.cloud.yandex.net/translate/v2/translate',
                             json=body,
                             headers=headers
                             )
    str_dict = response.text #–ø–æ—É–ª—á–∞—é –æ—Ç–≤–µ—Ç(–ø–µ—Ä–µ–≤–æ–¥)
    done_dict = eval(str_dict)#—Ç–∞–∫ –∫–∞–∫ –æ—Ç–≤–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏(—Ç–∞–º —Å–ª–æ–≤–∞—Ä—å –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏), —Ç–æ —á–µ—Ä–µ–∑ eval —è –¥–µ–ª–∞—é –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–ª–≤–æ–∞—Ä—å
    qq = LANGUAGES.get(target)#—á–µ—Ä–µ–∑ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ –∫–ª—é—á —è–∑—ã–∫–∞, —è –ø—Ä–æ—Å—Ç–æ–ø –æ–ª—É—á–∞—é –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –≤–∏–¥–µ—Ç—å, –Ω–∞ –∫–∞–∫–æ–π —è–∑—Ñ–∫ –±—ã–ª —Å–æ–≤–µ—Ä—à—ë–Ω –ø–µ—Ä–µ–≤–æ–¥
    #–≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ, –º–Ω–µ –Ω—É–∂–Ω–æ –æ—Ç—Å–µ–∏—Ç—å –≤—Å—ë –ª–∏—à–Ω–µ–µ. –û–±—Ä–∞—â–∞—é—Å—å –∫ —Å–ª–≤–æ–∞—Ä—é, –∞ –∑–∞—Ç–µ–º –∫ –µ–≥–æ –∫–ª—é—á—É
    #'translations', –∑–∞—Ç–µ–º –∫ –º–∞—Å—Å–∏–≤—É, –≤ –∫–æ—Ç–æ—Ä–º –µ—â—ë –æ–¥–∏–Ω —Å–ª–æ–≤–∞—Ä—å, –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 0 –∏ —É–∂–µ –∫ –∫–ª—é—á—É text, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–æ–ª—É—á–µ–º —Ç–µ–∫—Å—Ç
    bot.send_message(message.chat.id, text=f"*–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ {qq}.*\n"
                                           f"\n"
                                           f"{done_dict['translations'][0]['text'].replace('&#39;', '')}.", parse_mode="Markdown")
    #–æ–±–æ—Ä–∞—á–∏–≤–∞—é –≤ —Ç—Ä–∞–π –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫
    #–≤ tts –æ–±—Ä–∞—â–∞—é—Å—å –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ gtts, –≤—Å—Ç–∞–≤–ª—è—è –ø–µ—Ä–µ–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –≤—ã–±–∏—Ä–∞—è —è–∑—ã–∫.
    #—Å–æ—Ö—Ä–∞–Ω—è—é –æ–∑–≤—É—á–∫—É –∫–∞–∫ –ü—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ.ogg
    #–æ—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ
    #–∑–∞–≤–µ—Ä—à–∞—é –ø—Ä–æ—Ü–µ—Å—Å –∏ —É–¥–∞–ª—è—é —Ñ–∞–π–ª.
    try:
        tts = gTTS(f" {done_dict['translations'][0]['text'].replace('&#39;', '')}", lang=f'{target}')
        tts.save('–ü—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ.ogg')
        audio = open(r'–ü—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ.ogg', 'rb')
        bot.send_audio(message.chat.id, audio)
        audio.close()
        os.remove('–ü—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ.ogg')
    except ValueError:
        bot.send_message(message.chat.id, text='–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.')#–ø—Ä–∏ –æ—à–∏–±–∫–µ —Å–æ–æ–±—â–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —è–∑—ã–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –æ–∑–≤—É—á–∫–∏

def error_message(message):
    bot.send_message(message.chat.id, text="–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ.")# –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é —Å—é–¥–∞ –ø—Ä–∏ —Å–ª–¥—É—á–∞–µ –ø–æ–¥–æ–±–Ω–æ–π –æ—à–∏–±–∫–∏

@bot.message_handler()
def any_message(message): #—Å—é–¥–∞ –ø–æ–ø–∞–¥–∞—é—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    global q #–Ω–∞—à –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
    text = message.text #–æ–±–æ—Ä–∞—á–∏–≤–∞—é –≤ —É–¥–æ–±–Ω—ã–π –≤–∏–¥
    list_of_cut = '/111' #–∫–æ–º–∞–Ω–¥–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –≤–≤–µ–¥—ë—Ç —è–∑—ã–∫
    if text == '–°—Ç–∞—Ä—Ç':
        start(message)
        return
    elif text == '–°–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤':
        list_lan(message)
        return
    elif text == '–í—ã–±–æ—Ä —è–∑—ã–∫–∞':
        choose_lang(message, 0, 1)
        return
    elif text == '–ü–æ–º–æ—â—å':
        help(message)
        return
    elif text[0] in list_of_cut[0] and text[1] in list_of_cut[1] and text[2] in list_of_cut[2] and text[3] in list_of_cut[3]:
    	#—Å—é–¥–∞ –ø–æ–ø–∞–¥–∞—é—Ç –≤—Å—ë, —á—Ç–æ –Ω–∞—á–Ω–∏–∞–µ—Ç—Å—è —Å /111 ...
    	#–≤ q –±—É–¥–µ—Ç –ø–æ–º–µ—â—ë–Ω —è–∑—ã–∫
        q = ''
        new_list = text.split()#—Å–ø–ª–∏—Ç—É—é —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ç—É—Ç –∂–µ –∏ —Å–ø—Å–∏–æ–∫
        new1 = new_list[1].capitalize()#–≤—ã–±–∏—Ä–∞—é —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 1, —Ç–∞–º –≤—Å–µ–≥–¥–∞ —è–∑—ã–∫
        if new1 in LANGUAGES.values(): #–ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –Ω–∞—à —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 1 –µ—Å—Ç—å –≤ –∑–Ω–∞—á–µ–Ω–∏—è—Ö —Å–ª–æ–≤–∞—Ä—è LANGUAGES, —Ç–æ –∏–¥–µ–º –¥–∞–ª–µ–µ
            for k, v in LANGUAGES.items():
                if v == new1: #–µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ = –Ω–∞—à —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ...
                    q = k #–ø—Ä–∏—Å–≤–∞–∏–≤–∞—é
                    bot.send_message(message.chat.id, text='–Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω - ' + (q).capitalize() + '')
                else:
                    bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ —è–∑—ã–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    else: #–µ—Å–ª–∏ –Ω–∏—á—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤–≤—ë–ª, —Ç–æ
        try:#–æ–±–æ—Ä–∞—á–∏–≤–∞—è –≤ —Ç—Ä–∞–π, –º—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—è–ª–µ–º—Å—è –≤ —Ñ—É-–∏—é –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É, —Ç—É—Ç –∂–µ –æ–±—ä—è—Å–Ω—è–ª –≤—ã—à–µ
            process_of_translation(message, text, q)
        except:
            process_of_translation(message, text, 'en')

print('WE WORK')
bot.polling()#–≤–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞
